# .github/workflows/ex2-fe-check-deploy.yml
name: Frontend Check and Deploy Simulation

on:
  workflow_call:
    secrets:
      LINUX_SSH_PRIVATE_KEY:
        required: true
      LINUX_USER_DEVOPS:
        required: true
      LINUX_SERVER_IP:
        required: true
    outputs:
      had_changes:
        description: "Whether changes were detected"
        value: ${{ jobs.fe-deploy.outputs.changes_detected }}
      action_taken:
        description: "Action taken during deployment"
        value: ${{ jobs.fe-deploy.outputs.action }}

jobs:
  fe-deploy:
    runs-on: ubuntu-latest
    outputs:
      changes_detected: ${{ steps.check-changes.outputs.changes }}
      action: ${{ steps.deploy.outputs.action_taken }}

    steps:
      - uses: actions/checkout@v4
        with:
          fetch-depth: 0

      - name: Check NextJS Directory Changes
        id: check-changes
        run: |
          echo "Checking for code changes in NextJS directory..."
          
          # Check if there are changes in the latest commit
          CHANGES=$(git diff-tree --no-commit-id --name-only -r HEAD -- ./nextjs_portfolio2025)
          
          if [ -z "$CHANGES" ]; then
            echo "No changes detected in nextjs_portfolio2025 directory"
            echo "changes=false" >> $GITHUB_OUTPUT
          else
            echo "Changes detected in nextjs_portfolio2025 directory:"
            echo "$CHANGES"
            echo "changes=true" >> $GITHUB_OUTPUT
          fi

      - name: Install YQ
        run: |
          wget https://github.com/mikefarah/yq/releases/download/v4.34.1/yq_linux_amd64 -O /usr/local/bin/yq
          chmod +x /usr/local/bin/yq

      - name: Load Environment Defaults
        id: env-defaults
        run: |
          # Extract NextJS environment variables from defaults file
          NEXTJS_DEFAULTS=$(yq e '.nextjs_defaults' .github/defaults/env-defaults.yml)
          echo "$NEXTJS_DEFAULTS" > ./nextjs_portfolio2025/prod.env

      - name: Login to GitHub Container Registry
        uses: docker/login-action@v3
        with:
          registry: ghcr.io
          username: ${{ github.actor }}
          password: ${{ secrets.GHPAT_021425_CICD_GHCR_REPO_WORKFLOW_WRDPACKAGES }}
      
      - name: Build & Publish Image
        if: steps.check-changes.outputs.changes == 'true'
        run: |
          echo "Building and publishing frontend Docker image..."
          
          # Build the NextJS Docker image with env file
          docker build \
            --build-arg NODE_ENV=production \
            --build-arg ENV_FILE=prod.env \
            -t ghcr.io/pmeaney/nextjs-prod-wnp-portfolio-2025:latest \
            ./nextjs_portfolio2025
          
          # Push the Docker image to GitHub Container Registry
          docker push ghcr.io/pmeaney/nextjs-prod-wnp-portfolio-2025:latest
          
          # Clean up
          rm ./nextjs_portfolio2025/prod.env
          
          echo "BUILT=true" >> $GITHUB_ENV
          echo "PUSHED=true" >> $GITHUB_ENV

      - name: Deploy
        id: deploy
        run: |
          #########################
          ## For deployment, dont forget to connect the container to network main-network--npm020325
          #########################
          if [[ "${{ steps.check-changes.outputs.changes }}" == "true" ]]; then
            echo "Deploying new frontend version..."
            echo "action_taken=New version deployed" >> $GITHUB_OUTPUT
          else
            echo "No changes detected, skipping deployment"
            echo "action_taken=No deployment needed" >> $GITHUB_OUTPUT
          fi

      - name: Status Report
        run: |
          echo "Frontend Deployment Status:"
          echo "Changes Detected: ${{ steps.check-changes.outputs.changes }}"
          echo "Action Taken: ${{ steps.deploy.outputs.action_taken }}"
